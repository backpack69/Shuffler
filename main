using System;
using System.Collections.Generic;
using System.IO;

namespace Shuffle
{
    public class Shuffler
    {
        private List<string> leftRifflePile = new List<string>();
        private List<string> rightRifflePile = new List<string>();
        public List<string> shuffledDeck = new List<string>();
        public List<string> deck = new List<string>();

        public void Seperate (List<string> deck)
        {
            var deckindex = deck.Count;
            for (var index = 0; index < deckindex; ++index)
            {
                if(index < deckindex/2)
                {
                    leftRifflePile.Add(deck[0]);
                    deck.RemoveAt(0);
                }
                else
                {
                    rightRifflePile.Add(deck[0]);
                    deck.RemoveAt(0);
                }
            }
        }

        public void Riffle(List<string> leftRifflePile, List<string>rightRifflePile)
        {
            Random rnd = new Random();
            var riffleindex = leftRifflePile.Count + rightRifflePile.Count;

            for (var index = 0; index < riffleindex; index += 1)
            {
                var number = rnd.Next(0, 2);
                if(leftRifflePile.Count == 0 && rightRifflePile.Count == 0)
                {
                    break;
                }

                if(leftRifflePile.Count == 0)
                {
                    number = 1;
                }
                else if(rightRifflePile.Count == 0)
                {
                    number = 0;
                }

                if (number == 0)
                {
                    shuffledDeck.Add(leftRifflePile[0]);
                    leftRifflePile.RemoveAt(0);
                }

                else if (number == 1)
                {
                    shuffledDeck.Add(rightRifflePile[0]);
                    rightRifflePile.RemoveAt(0);
                }
            }
        }
        public void PerfectRiffle(List<string> leftrifflepile, List<string>rightrifflepile)
        {
            
            for(var index = 0; index < leftrifflepile.Count + rightrifflepile.Count; index += 1)
            {
                if (leftrifflepile[index] == null && rightrifflepile[index] == null)
                {
                    break;
                }

                else if (leftrifflepile[index] != null && rightrifflepile[index] != null)
                {
                    shuffledDeck.Add(rightrifflepile[index]);
                    shuffledDeck.Add(leftrifflepile[index]);
                }

                else if (leftrifflepile[index] != null && rightrifflepile[index] ==null)
                {
                    shuffledDeck.Add(leftrifflepile[index]);
                }

                else if (leftrifflepile[index] == null && rightrifflepile[index] != null)
                {
                    shuffledDeck.Add(rightrifflepile[index]);
                }
            }
        }
        
        static void Main(string[] args)
        {
            Shuffler shuffler = new Shuffler();
            var rnd = new Random();

            using (var reader = File.OpenText(@"C:\Users\Nicholas\Desktop\nic shuffle\Shuffle\Deck\deck.txt"))
            {

                var line = reader.ReadLine();
                while (line != null)
                {
                    shuffler.deck.Add(line);
                    // Console.WriteLine(line);
                    line = reader.ReadLine();
                }
            }
            for (var index = rnd.Next(50,100); index > 0; index -=1)
            {
                shuffler.Seperate(shuffler.deck);

                shuffler.Riffle(shuffler.leftRifflePile, shuffler.rightRifflePile);

                for (var i = 0; i < shuffler.shuffledDeck.Count; i += 1)
                {
                    shuffler.deck.Add(shuffler.shuffledDeck[i]);
                }

                shuffler.shuffledDeck.Clear();
            }

            // Console.WriteLine(shuffler.rightrifflepile[0]);
            // Console.WriteLine(shuffler.leftrifflepile[0]);
            using (var writer = File.CreateText(@"C:\Users\Nicholas\Desktop\nic shuffle\Shuffle\Deck\deck.txt"))
            {
                for(var index = 0; index <shuffler.deck.Count; index += 1)
                {
                    writer.WriteLine(shuffler.deck[index]);
                }
            }

        }
    }
}
